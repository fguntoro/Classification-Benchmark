import yaml

with open("config.yaml") as file:
    global_config = yaml.load(file, yaml.FullLoader)

path_data = global_config["PATH_DATA"] + "/"
path_label = global_config["PATH_LABEL"] + "/"
output_dir = global_config["OUTPUT_DIR"] + "/"


###############################
#                             #
# Rules for Feature Selection #
#                             #
###############################

rule variance_threshold:
    input:
        data = output_dir + "{group}/preprocessing/split_data/X_train.csv",
        label = output_dir + "{group}/preprocessing/split_data/y_train.csv",
        conf = "workflow/feature_selection/rules/config.yml",
    output:
        output_dir + "{group}/feature_selection/variance_threshold/variance_threshold_indices.csv",
    shell:
        "python workflow/feature_selection/scripts/sklearn_feature_selection.py --path_data {input.data} --path_label {input.label} --config {input.conf} --group {wildcards.group} --output {output} --feature_selection VarianceThreshold"

rule consensus_clustering:
    input:
        data = path_data,
        label = path_label,
        X = output_dir + "{group}/preprocessing/split_data/X_train.csv",
        y = output_dir + "{group}/preprocessing/split_data/y_train.csv",
        indices = output_dir + "{group}/feature_selection/variance_threshold/variance_threshold_indices.csv",
        conf = "workflow/feature_selection/rules/config.yml",
    output:
        output_dir + "{group}/feature_selection/consensus_clustering/consensus_clustering_indices.csv",
    shell:
        "Rscript workflow/feature_selection/scripts/consensus_clustering.R {input.data} {input.label} {input.indices} {wildcards.group} {output}"
        
rule feature_selection:
    input:
        data = path_data,
        label = path_label,
        train_indices = output_dir + "{group}/preprocessing/split_data/train_indices.csv",
        conf = "workflow/feature_selection/rules/config.yml",
    output:
        output_dir + "{group}/feature_selection/{feature_selection}/{feature_selection}.csv",
    shell:
        """
        if [[ "{wildcards.feature_selection}" == "stability" ]]; then
            Rscript workflow/feature_selection/scripts/stability_analysis.R {input.data} {input.label} {input.train_indices} {wildcards.group} {output}
        else
            python workflow/feature_selection/scripts/sklearn_feature_selection.py --path_data {input.data} --path_label {input.label} --indices {input.train_indices} --config {input.conf} --group {wildcards.group} --output {output} --feature_selection {wildcards.feature_selection}
        fi
        """