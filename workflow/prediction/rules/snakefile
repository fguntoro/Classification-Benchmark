import yaml

configfile: "workflow/prediction/rules/models_config.yml"


with open("config.yaml") as file:
    global_config = yaml.load(file, yaml.FullLoader)

path_data = global_config["PATH_DATA"] + "/"
path_label = global_config["PATH_LABEL"] + "/"
output_dir = global_config["OUTPUT_DIR"] + "/"


rule build_model:
    input:
        conf="workflow/prediction/rules/models_config.yml",
    output:
        output_dir + "{group}/prediction/models/{method}.joblib",
    conda:
        "../../prediction/envs/env.yml"
    shell:
        "python workflow/prediction/scripts/build_model.py --config {input.conf} --model-name {wildcards.method} --outfile {output}"


rule evaluation_sklearn:
    input:
        data=path_data,
        label=path_label,
        model=output_dir + "{group}/prediction/models/{method}.joblib",
        conf="workflow/prediction/rules/models_config.yml",
    output:
        evaluation = output_dir
        + "{group}/prediction/results/{method}.csv",
        fitted_model = output_dir
        + "{group}/prediction/results/fitted_models/{method}.joblib",
#    wildcard_constraints:
#        method = "sklearn_.*"
    conda:
        "../../prediction/envs/env.yml"
    threads: 8
    script:
        "../../prediction/scripts/evaluation.py"

rule aggregate_summary:
    input:
        lambda wildcards: expand(
            output_dir
            + "{group}/prediction/results/{method}.csv",
            method=global_config["METHODS"],
            group=wildcards.group,
            allow_missing=True,
        ),
    params:
        config=config,
    output:
        output_dir + "{group}/prediction/summary.csv",
    script:
        "../../prediction/scripts/aggregate.py"